<metal:macro use-macro="master">
    <metal:slot fill-slot="title">
        <title>Data Dump for <span tal:replace="_sim_name"/>... | ArchSim DB</title>
    </metal:slot>

    <metal:slot fill-slot="head">
        <!-- DataTables CSS -->
        <link href="${request.static_url('archsimdb:static/vendor/datatables-plugins/dataTables.bootstrap.css')}" rel="stylesheet">
        <link href="${request.static_url('archsimdb:static/vendor/datatables-responsive/dataTables.responsive.css')}" rel="stylesheet">
    </metal:slot>

    <metal:slot fill-slot="scripts">
        <!-- DataTables JavaScript -->
        <script src="${request.static_url('archsimdb:static/vendor/datatables/js/jquery.dataTables.min.js')}"></script>
        <script src="${request.static_url('archsimdb:static/vendor/datatables-plugins/dataTables.bootstrap.min.js')}"></script>
        <script src="${request.static_url('archsimdb:static/vendor/datatables-responsive/dataTables.responsive.js')}"></script>

        <script type="text/javascript" id="data" data="${data}">
            var data = JSON.parse($("#data").attr("data").replace(/'/g, '"'));
            var table;

            $(document).ready(function() {
                table = $('#data_table').DataTable({
                    data: data,
                    columns: [
                        { data: 'key' },
                        { data: 'value' }
                    ],
                    responsive: true,
                    pageLength: 25
                });
            });

            // -- 2. DOWNLOADING DATA AS CSV
            $("#download_as_csv").click(function(){
                var csv = "Key,Value\n";
                var row_data = table.rows({filter: 'applied'}).nodes();
                var csv_data = {};

                console.log(row_data)

                for (var key in row_data) {
                    if (!isNaN(key)) {
                        var inside_key = row_data[key]["children"]["0"]["textContent"];
                        var inside_val = row_data[key]["children"]["1"]["textContent"];

                        csv_data[inside_key] = parseInt(inside_val);
                    }
                }

                console.log(csv_data);

                // Take the raw data and turn it into CSV
                for (var key in csv_data) {
                    csv += key + "," + csv_data[key] + "\n"
                }

                // Download the file
                function downloadFile(fileName, urlData) {
                    var aLink = document.createElement('a');
                    aLink.download = fileName;
                    aLink.href = urlData;

                    var event = new MouseEvent('click');
                    aLink.dispatchEvent(event);
                }

                downloadFile('compared_data.csv', 'data:text/csv;charset=UTF-8,' + encodeURIComponent(csv));
            });
        </script>
    </metal:slot>

    <metal:slot fill-slot="body">
        <div class="row">
            <div class="col-lg-12">
                <h1 class="page-header">Data Dump for <span tal:replace="_sim_name"/>...</h1>
            </div>
            <!-- /.col-lg-12 -->
        </div>
        <!-- /.row -->
        <div class="row">
            <div class="col-lg-4" style="margin-bottom: 20px;">
                <button id="download_as_csv" class="btn btn-primary btn-block"><i class="fa fa-download" aria-hidden="true"></i> Download as CSV</button>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-12">
                <table width="100%" class="table table-striped table-bordered table-hover" id="data_table">
                    <thead>
                        <tr>
                            <th>Key</th>
                            <th>Value</th>
                        </tr>
                    </thead>
                </table>
            </div>
            <!-- /.col-lg-12 -->
        </div>
    </metal:slot>
</metal:macro>