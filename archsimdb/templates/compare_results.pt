<metal:macro use-macro="master">
    <metal:slot fill-slot="title">
        <title>Compare Results | ArchSim DB</title>
    </metal:slot>

    <metal:slot fill-slot="head">
        <!-- DataTables CSS -->
        <link href="${request.static_url('archsimdb:static/vendor/datatables-plugins/dataTables.bootstrap.css')}" rel="stylesheet">
        <link href="${request.static_url('archsimdb:static/vendor/datatables-responsive/dataTables.responsive.css')}" rel="stylesheet">

        <style>

        </style>
    </metal:slot>

    <metal:slot fill-slot="scripts">
        <!-- DataTables JavaScript -->
        <script src="${request.static_url('archsimdb:static/vendor/datatables/js/jquery.dataTables.min.js')}"></script>
        <script src="${request.static_url('archsimdb:static/vendor/datatables-plugins/dataTables.bootstrap.min.js')}"></script>
        <script src="${request.static_url('archsimdb:static/vendor/datatables-responsive/dataTables.responsive.js')}"></script>

        <!-- Chart JavaScript -->
        <script src="${request.static_url('archsimdb:static/vendor/flot/jquery.flot.js')}"></script>
        <script src="${request.static_url('archsimdb:static/vendor/flot/jquery.flot.categories.js')}"></script>
        <script src="${request.static_url('archsimdb:static/vendor/flot/jquery.flot.orderBars.js')}"></script>
        <script src="${request.static_url('archsimdb:static/vendor/html2canvas/html2canvas.js')}"></script>
        <script src="${request.static_url('archsimdb:static/vendor/clipboard/clipboard.min.js')}"></script>

        <script type="text/javascript" id="data" data="${results}">

            // Initial data parsing, done before any settings

            var data = JSON.parse($("#data").attr("data").replace(/'/g, '"'));

            var columns = "[{ \"title\": \"Workload\"}, ";

            var tableHeader = $("#tableHeader");
            for (var i = 0; i < data.configs.length; i++) {
                tableHeader.append("<th>" + data.configs[i] + "</th>");
                columns += "{ \"title\": \"" + data.configs[i] + "\" },";
            }

            columns = columns.slice(0, columns.length -1);
            columns += "]";
            columns = JSON.parse(columns);

            updateTables(data);

            // Create a table for each stat and fill it
            function updateTables(data) {
                $('#tables').empty();
                for (var stat in data.stats) {

                    // Add the title and table
                    $('#tables').append($('<h4>' + data.stats[stat] + '</h4>'));
                    $('#tables').append($('<table/>', {
                        id: 'table_' + stat,
                        'class': 'table table-striped table-bordered table-hover',
                        'width': '100%'
                    }));
                    $('#tables').append($('<hr/>'));

                    // Fill the table
                    $('#table_' + stat).DataTable({
                        data: data.data[data.stats[stat]],
                        columns: columns,
                        responsive: true,
                        paging: false,
                        info: false,
                        searching: false,
                        columnDefs: [
                            { "orderable": false, "targets": 0 }
                        ],
                        aaSorting: [],
                        pageLength: 25,

                        // Highlight the maximum value in a row with red text
                        rowCallback: function (row, data, index) {
                            if (data.length === 0) {
                                return -1;
                            }

                            var newdata = Object.keys(data).map(function (key) {
                                return data[key];
                            });
                            var max = newdata[1];
                            var maxIndex = 1;
                            var maxIndeces = [1];
                            var maxValues = [max]

                            for (var i = 2; i < newdata.length; i++) {
                                if (newdata[i] > max) {
                                    maxIndex = i;
                                    max = newdata[i];
                                } else if (newdata[i] == max) {
                                    maxIndeces.push(i);
                                    maxValues.push(newdata[i]);
                                }
                            }

                            var max_from_array = Math.max.apply(Math, maxValues);

                            if (maxIndeces.length != newdata.length - 1) {
                                if (max_from_array >= max) {
                                    for (var x = 0; x < maxIndeces.length; x++) {
                                        $(row).find('td:eq(' + maxIndeces[x] + ')').css('color', 'red');
                                    }
                                } else {
                                    $(row).find('td:eq(' + maxIndex + ')').css('color', 'red');
                                }
                            }
                        }
                    });
                }
            }

            // Settings Menu

            var data_after_settings = JSON.parse(JSON.stringify(data));
            var canvas_data;

            // ---------- ON PAGE LOAD ---------- //

            // Fill the select menu for choosing a baseline column with avaiable configuratoins
            for (var config in data.configs) {
                $('#baseline').append($('<option>', {value:config, text:data.configs[config]}));
            }

            // Fill the select menu for choosing which stat to generate a graph for with available stats
            for (var stat in data.data) {
                $('#generate_chart_stat').append($('<option>', {value:stat, text:stat}));
            }


            // ---------- CALLABLE FUNCTIONS ---------- //


            // -- 1. CHOOSING BASELINE COLUMN
            $('#baseline').change(function() {
                data_after_settings = JSON.parse(JSON.stringify(data));
                var selected = parseInt($('#baseline').val())+1;

                // For every column in every row in every table, change the data relative
                // to a user-defined column.
                if (selected != 0) {
                    for (var key in data_after_settings.data) {
                        var workloads = data_after_settings.data[key];
                        for (var workload in workloads) {
                            var baseline = workloads[workload][selected];
                            for (var i = 1; i < workloads[workload].length; i++) {
                                workloads[workload][selected] = 1;
                                if (i != selected && baseline != null && workloads[workload][i] != null) {
                                    workloads[workload][i] = parseFloat(workloads[workload][i])/baseline;
                                }
                            }
                        }
                    }
                }
                updateTables(data_after_settings);
            });


            // -- 2. DOWNLOADING DATA AS CSV
            $("#download_as_csv").click(function(){
                var csv = "";

                // Take the raw data and turn it into CSV
                for (var key in data_after_settings.data) {
                    csv += key + ",";
                    var headings = data_after_settings.configs.join(",");
                    csv += headings + "\n";
                    data_after_settings.data[key].forEach(function(infoArray, index){
                        dataString = infoArray.join(",");
                        csv += dataString+ "\n";
                    });
                    csv += "\n";
                }

                // Download the file
                function downloadFile(fileName, urlData) {
                    var aLink = document.createElement('a');
                    aLink.download = fileName;
                    aLink.href = urlData;

                    var event = new MouseEvent('click');
                    aLink.dispatchEvent(event);
                }

                downloadFile('compared_data.csv', 'data:text/csv;charset=UTF-8,' + encodeURIComponent(csv));
            });


            // -- 3. GENERATE CHART
            $('#generate_chart').click(function() {

                // Create a pop-up (modal) with an editable text box of raw data
                // if the 'Advanced Edit' checkbox is checked
                if ($('#advanced_graph_edit').is(':checked')) {
                    var stat = $('#generate_chart_stat').val();

                    $('#advanced_edit_modal').modal('show');
                    $('#advanced_edit_modal_textbox').val(data_after_settings.data[stat].join("\n"));

                    // Replace nulls with 0 on click of the 'Replace Nulls with 0' button
                    $('#advanced_edit_modal_replace_nulls').on('click', function () {
                        var lines = $('#advanced_edit_modal_textbox').val().split(/\n/);
                        for (var i = 0; i < lines.length; i++) {
                            lines[i] = lines[i].replace(/,,/g, ",0,")
                            if (lines[i][lines[i].length-1] == ',') {
                                lines[i] = lines[i] + '0'
                            }
                        }
                        $('#advanced_edit_modal_textbox').val(lines.join("\n"));
                    });

                    // Send the data to the `generateChart` function on click of the 'Submit' button
                    $("#advanced_edit_modal_submit").on("click", function () {
                        var lines = $('#advanced_edit_modal_textbox').val().split(/\n/);
                        var data = []
                        for (var i=0; i < lines.length; i++) {
                            if (/\S/.test(lines[i])) {
                                data.push(lines[i].split(','));
                            }
                        }
                        $('#advanced_edit_modal').modal('hide');

                        var outputData = {'data': {[stat]: data}}
                        generateChart(outputData);
                    });
                } else {
                    generateChart(data_after_settings);
                }
            });

            function generateChart(inputData) {
                $("#chart").empty();
                $('#chart_modal').show();
                $('#chart_modal').modal('show');
                var stat = $('#generate_chart_stat').val();
                var type = $('#generate_chart_type').val();

                // Take the raw-data and reform it into the required format for Flot
                var chart_list = [];
                for (var x = 0; x < data_after_settings.configs.length; x++) {
                    var workload_data = inputData.data[stat];
                    var values = [];
                    for (var i = 0; i < workload_data.length; i++) {
                        var tuple = [workload_data[i][0], workload_data[i][x+1]];
                        values.push(tuple);
                    }
                    chart_list.push(values);
                }

                var config_list = []

                // Configure the graph depending on the type
                for (var x = 0; x < data_after_settings.configs.length; x++) {
                    if (type == "bar") {
                        var config = {
                            label: data_after_settings.configs[x],
                            data: chart_list[x]
                        };
                    } else if (type == "line") {
                        var config = {
                            label: data_after_settings.configs[x],
                            data: chart_list[x]
                        };
                    }
                    config_list.push(config)
                }

                // More graph configuration
                if (type == "bar") {
                    var chart_config = {
                        series: {
                            bars: {
                                show: true,
                                barWidth: 1 / (config_list.length + 1),
                                lineWidth: 0,
                                order: 1,
                                fillColor: {
                                    colors: [{
                                        opacity: 1
                                    }, {
                                        opacity: 0.7
                                    }]
                                }
                            }
                        },
                        xaxis: {
                            mode: "categories",
                            tickLength: 0
                        },
                        grid: {hoverable: true, clickable: true}
                    }
                } else if (type == "line") {
                    var chart_config = {
                        series: {
                            lines: { show: true },
                            points: {
                                radius: 3,
                                show: true,
                                fill: true
                            },
                        },
                        xaxis: {
                            mode: "categories",
                            tickLength: 0,
                            axisLabelPadding: 100
                        },
                        grid: {hoverable: true, clickable: true}
                    }
                }

                // Define what a tooltip looks like
                function showTooltip(x, y, contents, z) {
                    $('<div id="flot-tooltip">' + contents + '</div>').css({
                        top: y - 30,
                        left: x - 135,
                        'border-color': z,
                    }).appendTo("#chart_modal").fadeIn(200);
                }

                // Plot the graph
                $.plot("#chart", config_list, chart_config);

                // Create a tooltip when hovering over a data point on the graph
                $("#chart").bind("plothover", function (event, pos, item) {
                    if (item) {
                        if ((previousPoint != item.dataIndex) || (previousLabel != item.series.label)) {
                            previousPoint = item.dataIndex;
                            previousLabel = item.series.label;

                            $("#flot-tooltip").remove();

                            var x = item.datapoint[0],
                                    y = item.datapoint[1];
                            z = item.series.color;

                            showTooltip(item.pageX, item.pageY,
                                    "<b>" + item.series.label + "</b><br />" + y,
                                    z);
                        }
                    } else {
                        $("#flot-tooltip").remove();
                        previousPoint = null;
                    }
                });

                // Makes the chart a canvas such that the graph image can be downloaded
                html2canvas($('#chart'), {
                    onrendered: function (canvas) {
                        canvas_data = canvas.toDataURL();
                    }
                });
            }


            // 4. DOWNLOAD CHART AS IMAGE
            function downloadGraphImage() {
                function downloadFile(fileName, urlData) {
                    var aLink = document.createElement('a');
                    aLink.download = fileName;
                    aLink.href = urlData;

                    var event = new MouseEvent('click');
                    aLink.dispatchEvent(event);
                }

                var image = canvas_data;
                image = image.replace("image/png","image/octet-stream");

                downloadFile('generated_chart.png', 'data:image/octet-stream' + encodeURI(image));
            }


            // 5. GENERATE SHAREABLE URL
            $('#generate_shareable_url').click(function() {
                $('#shareable_url_modal').modal('show');
                if (!data.from_permalink) {
                    var stats = data.stats.join().trim().replace(/\//g, ';');
                    var apps = data.apps.join().trim().replace(/\//g, ';');

                    var curl = window.location.href;

                    var shareable_url = curl + '/stats=' + stats + '/apps=' + apps;
                } else {
                    var shareable_url = window.location.href;
                }

                $('#shareable_url_text').val(shareable_url);

                new Clipboard('#shareable_url_copy');
            });
        </script>
    </metal:slot>

    <metal:slot fill-slot="body">
        <!-- Title -->
        <div class="row">
            <div class="col-lg-12">
                <h1 class="page-header">Compare Results</h1>
            </div>
        </div>
        <!-- End Title -->

        <!-- Settings Menu -->
        <div class="row">
            <div class="col-lg-12">
                <div class="panel panel-primary">
                    <div class="panel-heading">
                        Settings
                    </div>
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-lg-4">
                                <label for="baseline">Set Baseline Column</label><br>
                                <select id="baseline" class="form-control">
                                    <option value="-1">None</option>
                                </select>
                            </div>
                            <div class="col-lg-4">
                                <label for="baseline">Download as CSV</label><br>
                                <button id="download_as_csv" class="btn btn-primary btn-block"><i class="fa fa-download" aria-hidden="true"></i> Download as CSV</button>
                            </div>
                            <div class="col-lg-4">
                                <label for="baseline">Get Permalink</label><br>
                                <button id="generate_shareable_url" class="btn btn-primary btn-block"><i class="fa fa-link" aria-hidden="true"></i> Get Permalink</button>
                            </div>
                        </div>
                        <div class="row" style="margin-top: 15px;">
                            <div class="col-lg-12">
                                <label for="baseline">Generate Chart</label><br>
                                <div class="row">
                                    <div class="col-sm-3">
                                        <select id="generate_chart_stat" class="form-control">
                                            <option value="-1" selected disabled>Choose Stat</option>
                                        </select>
                                    </div>
                                    <div class="col-sm-3">
                                        <select id="generate_chart_type" class="form-control">
                                            <option value="-1" selected disabled>Choose Graph Type</option>
                                            <option value="bar">Bar Chart</option>
                                            <option value="line">Line Chart</option>
                                        </select>
                                    </div>
                                    <div class="col-sm-3">
                                        <label class="form-check-label">
                                            <input id="advanced_graph_edit" class="form-check-input" type="checkbox">  Advanced Data Edit
                                        </label>
                                    </div>
                                    <div class="col-sm-3">
                                        <button id="generate_chart" class="btn btn-primary btn-block"><i class="fa fa-bar-chart-o" aria-hidden="true"></i> Generate Chart</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- End Settings Menu -->

        <!-- Tables -->
        <div class="row">
            <div class="col-lg-12" tal:condition="exists:warnings">
                <div class="alert alert-warning alert-dismissable">
                    <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                    <b>Warning!</b> There was an error in one or more of your composite stats.
                    <ul tal:repeat="item warnings">
                        <li tal:content="item"></li>
                    </ul>
                </div>
            </div>
            <div id="tables" class="col-lg-12">
            </div>
        </div>
        <!-- End Tables -->

        <!-- Chart Modal -->
        <div class="modal fade" id="chart_modal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                        <h4 class="modal-title" id="myModalLabel">Generated Chart</h4>
                    </div>
                    <div class="modal-body">
                        <div class="flot-chart" id="chart_container" style="overflow: visible;">
                            <div class="flot-chart-content" id="chart" style="margin-top: 50px;"></div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-primary" onClick="downloadGraphImage()">Download as Image</button>
                    </div>
                </div>
            </div>
        </div>
        <!-- End Chart Modal -->

        <!-- Advanced Graph Edit Modal -->
        <div class="modal fade" id="advanced_edit_modal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel2" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true" style="float:left;">&times;</button>
                        <h4 class="modal-title" id="myModalLabel">Edit Chart Data</h4>
                    </div>
                    <div class="modal-body">
                        <textarea rows="20" id="advanced_edit_modal_textbox" class="form-control"></textarea>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="close" data-dismiss="modal" style="float:left;">Close</button>
                        <button type="button" class="btn btn-default" id="advanced_edit_modal_replace_nulls">Replace Nulls with 0</button>
                        <button type="button" class="btn btn-primary" id="advanced_edit_modal_submit">Generate Chart</button>
                    </div>
                </div>
            </div>
        </div>
        <!-- End Advanced Graph Edit Modal -->

        <!-- Generate Permalink Modal -->
        <div class="modal fade" id="shareable_url_modal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel3" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                        <h4 class="modal-title" id="myModalLabel">Permalink</h4>
                    </div>
                    <div class="modal-body">
                        <div class="input-group custom-search-form">
                            <input type="text" class="form-control" id="shareable_url_text">
                            <span class="input-group-btn">
                              <button class="btn btn-default" type="button" id="shareable_url_copy" data-clipboard-target="#shareable_url_text">
                                <i class="fa fa-clipboard"></i>
                              </button>
                            </span>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal" style="float:left;">Close</button>
                    </div>
                </div>
            </div>
        </div>
        <!-- End Generate Permalink Modal -->
    </metal:slot>
</metal:macro>