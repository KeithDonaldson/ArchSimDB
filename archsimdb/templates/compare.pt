<metal:macro use-macro="master">
    <metal:slot fill-slot="title">
        <title>Compare | ArchSim DB</title>
    </metal:slot>

    <metal:slot fill-slot="head">
        <!-- DataTables CSS -->
        <link href="${request.static_url('archsimdb:static/vendor/datatables-plugins/dataTables.bootstrap.css')}" rel="stylesheet">
        <link href="${request.static_url('archsimdb:static/vendor/datatables-responsive/dataTables.responsive.css')}" rel="stylesheet">
        <link href="${request.static_url('archsimdb:static/vendor/jstree/dist/themes/default/style.min.css')}" rel="stylesheet"  />
    </metal:slot>

    <metal:slot fill-slot="scripts">
        <!-- DataTables JavaScript -->
        <script src="${request.static_url('archsimdb:static/vendor/datatables/js/jquery.dataTables.min.js')}"></script>
        <script src="${request.static_url('archsimdb:static/vendor/datatables-plugins/dataTables.bootstrap.min.js')}"></script>
        <script src="${request.static_url('archsimdb:static/vendor/datatables-responsive/dataTables.responsive.js')}"></script>
        <script src="${request.static_url('archsimdb:static/vendor/multiselect/multiselect.min.js')}"></script>
        <script src="${request.static_url('archsimdb:static/vendor/jstree/dist/jstree.min.js')}"></script>

        <!-- Custom JavaScript -->
        <script type="text/javascript" id="data" data="${hierarchy}">
            jQuery(document).ready(function($) {
                var data = JSON.parse($("#data").attr("data").replace(/'/g, '"'));

                // Instantiate the fields selector
                $('#fields').multiselect({
                    search: {
                        left: '<input type="text" name="q" class="form-control" style="margin-bottom: 10px;" placeholder="Search..." />',
                        right: '<input type="text" name="q" class="form-control" style="margin-bottom: 10px;" placeholder="Search..." />',
                    },
                    keepRenderingSort: true
                });

                // Insantiate the hierarchical database tree
                $("#tree").jstree({
                    "plugins": ["json_data", "checkbox", "search"],
                    "core": {
                        "multiple": true,
                        "data": {
                            "data" : function(node){
                                return {"id" : node.id};
                            },
                            "url": "/get/hierarchy"
                        }
                    },
                    "search": {
                        "case_insensitive": true,
                        "show_only_matches" : true
                    },
                });

                // Add a search bar to the tree
                $(".search-input").keyup(function() {
                    var searchString = $(this).val();
                    $('#tree').jstree('search', searchString);
                });
            });

            var submitted_apps;

            // Called on submitting the chosen applications
            function submit_apps() {
                var selectList = $("#fields");
                var selectList_to = $("#fields_to");
                var apps = $('#tree').jstree(true).get_selected()

                // Applications start with a star in our jstree, so get all of them out.
                for (var i = 0; i < apps.length; i++) {
                    if (apps[i][0] != '*') {
                        apps.splice(i, 1);
                        i -= 1;
                    } else {
                        apps[i] = apps[i].slice(1, apps[i].length);
                    }
                }

                apps.sort();
                submitted_apps = apps;
                selectList.empty();
                selectList_to.empty();

                // Send a POST request to get all fields from the selected applications
                $.post( "get/fields", { 'apps': apps }, function( data ) {
                    if (data != null) {
                        $("#select_rows").hide();
                        $("#loading_row").show();
                        var fields = data['fields'];
                        $.each(fields, function (index, item) {
                            selectList.append(new Option(item, item));
                        });
                        $("#loading_row").hide();
                        $("#select_rows").show();
                    }

                    return false;
                });
            };

            // Called on submitting the chosen fields
            function submit_compare() {
                var apps = submitted_apps;
                var fields = document.getElementById('fields_to').options;
                var fieldsList = []
                var composite_used = false;

                // Check if a composite stat was chosen
                for (var i = 0; i < fields.length; i++) {
                    fieldsList.push(fields[i].value);
                    if (fields[i].value[0] == '$') {
                        composite_used = true;
                    }
                }

                // Request confirmation to calculate the composite stat
                if (composite_used == true) {
                    if (confirm("This process uses Python's eval() method and trusts that your " +
                                    "composite stats are correct. Continue?") == true) {
                    } else {
                        return;
                    }
                }

                var parameters = {'apps': apps, 'fields': fieldsList};
                var form = $('<form></form>');

                form.attr("method", "post");
                form.attr("action", '/compare/results');

                // Prepare and set data
                $.each(parameters, function(key, value) {
                    if ( typeof value == 'object' || typeof value == 'array' ){
                        $.each(value, function(subkey, subvalue) {
                            var field = $('<input />');
                            field.attr("type", "hidden");
                            field.attr("name", key+'[]');
                            field.attr("value", subvalue);
                            form.append(field);
                        });
                    } else {
                        var field = $('<input />');
                        field.attr("type", "hidden");
                        field.attr("name", key);
                        field.attr("value", value);
                        form.append(field);
                    }
                });
                $(document.body).append(form);
                form.submit();
            };
        </script>
    </metal:slot>

    <metal:slot fill-slot="body">
        <div class="row">
            <div class="col-lg-12">
                <h1 class="page-header">Compare</h1>
            </div>
            <!-- /.col-lg-12 -->
        </div>
        <div class="row">
            <div class="col-lg-12">
                <p>This tool allows you to compare the data from multiple statfiles. There is no limit
                    on the number of applications that can be compared, but keep in mind that the more you add
                    the slower the results will arrive. A lot of data sifting is being done in this page, so please
                    bear in mind it may take a while.</p>
                <p><b>Note:</b> If you change the statfile selection after submitting a previous selection, you must
                click 'Submit These Applications' again. Otherwise, your original selection will be compared.</p>
            </div>
        </div>

        <div class="row" id="select_apps">
            <div class="col-lg-12">
                <h2>Select Applications</h2>
            </div>

            <div class="col-lg-12">
                 <input class="search-input form-control" placeholder="Search applications..."></input>
                <div id="tree"></div>
            </div>

            <div class="col-lg-12">
                <button type="submit" onclick="submit_apps();" class="btn btn-primary btn-lg btn-block" style="margin-top: 20px;">Submit These Applications</button>
            </div>
        </div>

        <div id="loading_row" style="display: none; margin-top: 20px; text-align: center;" class="row">
            <img src="${request.static_url('archsimdb:static/loader.gif')}" alt="loading..." width="60px" />
            <p>Loading...</p>
        </div>

        <div class="row" id="select_rows" style="display: none;">
            <div class="col-lg-12">
                <hr>
                <h2>Select Fields</h2>
            </div>

            <div class="col-xs-5">
                <select name="fields" id="fields" class="form-control" size="8" multiple="multiple">
                </select>
            </div>

            <div class="col-xs-2">
                <button type="button" id="fields_undo" class="btn btn-primary btn-block">undo</button>
                <button type="button" id="fields_rightAll" class="btn btn-block"><i class="glyphicon glyphicon-forward"></i></button>
                <button type="button" id="fields_rightSelected" class="btn btn-block"><i class="glyphicon glyphicon-chevron-right"></i></button>
                <button type="button" id="fields_leftSelected" class="btn btn-block"><i class="glyphicon glyphicon-chevron-left"></i></button>
                <button type="button" id="fields_leftAll" class="btn btn-block"><i class="glyphicon glyphicon-backward"></i></button>
                <button type="button" id="fields_redo" class="btn btn-warning btn-block">redo</button>
            </div>

            <div class="col-xs-5">
                <select name="fields_to" id="fields_to" class="form-control" size="8" multiple="multiple"></select>
            </div>

            <div class="col-lg-12">
                <button type="submit" onclick="submit_compare();" class="btn btn-primary btn-lg btn-block" style="margin-top: 20px;">Submit Fields and Compare</button>
            </div>
        </div>
    </metal:slot>
</metal:macro>